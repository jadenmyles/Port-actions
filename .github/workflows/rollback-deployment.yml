name: Rollback ECS Deployment

on:
  workflow_dispatch:
    inputs:
      port_context:
        required: true
        description: 'Action and general context (blueprint, run id, etc...)'
        type: string

jobs:
  rollback-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Inform Port about workflow start
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_context).runId}}
          logMessage: Initiating rollback for ECS service

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get current and previous task definitions
        id: task-definitions
        run: |
          CLUSTER_NAME="${{ fromJson(inputs.port_context).entity.relations.cluster }}"
          SERVICE_ARN="${{ fromJson(inputs.port_context).entity.identifier }}"
          
          # Get current task definition
          CURRENT_TASK_DEF=$(aws ecs describe-services \
            --cluster "$CLUSTER_NAME" \
            --services "$SERVICE_ARN" \
            --query 'services[0].taskDefinition' \
            --output text)
          
          echo "current_task_def=$CURRENT_TASK_DEF" >> $GITHUB_OUTPUT
          echo "üìã Current task definition: $CURRENT_TASK_DEF"
          
          # Extract family name and current revision
          FAMILY_NAME=$(echo $CURRENT_TASK_DEF | sed 's/.*task-definition\/\([^:]*\):.*/\1/')
          CURRENT_REVISION=$(echo $CURRENT_TASK_DEF | sed 's/.*://')
          
          echo "family_name=$FAMILY_NAME" >> $GITHUB_OUTPUT
          echo "current_revision=$CURRENT_REVISION" >> $GITHUB_OUTPUT
          
          # Calculate previous revision
          PREVIOUS_REVISION=$((CURRENT_REVISION - 1))
          
          if [ $PREVIOUS_REVISION -lt 1 ]; then
            echo "‚ùå No previous revision available to rollback to"
            exit 1
          fi
          
          PREVIOUS_TASK_DEF="$FAMILY_NAME:$PREVIOUS_REVISION"
          echo "previous_task_def=$PREVIOUS_TASK_DEF" >> $GITHUB_OUTPUT
          echo "üîÑ Will rollback to: $PREVIOUS_TASK_DEF"
          
          # Verify previous task definition exists
          if ! aws ecs describe-task-definition --task-definition "$PREVIOUS_TASK_DEF" > /dev/null 2>&1; then
            echo "‚ùå Previous task definition $PREVIOUS_TASK_DEF does not exist"
            exit 1
          fi

      - name: Perform rollback
        run: |
          CLUSTER_NAME="${{ fromJson(inputs.port_context).entity.relations.cluster }}"
          SERVICE_ARN="${{ fromJson(inputs.port_context).entity.identifier }}"
          PREVIOUS_TASK_DEF="${{ steps.task-definitions.outputs.previous_task_def }}"
          
          echo "üîÑ Rolling back service to previous task definition..."
          
          aws ecs update-service \
            --cluster "$CLUSTER_NAME" \
            --service "$SERVICE_ARN" \
            --task-definition "$PREVIOUS_TASK_DEF"
          
          echo "‚úÖ Rollback initiated"

      - name: Wait for rollback to complete
        run: |
          CLUSTER_NAME="${{ fromJson(inputs.port_context).entity.relations.cluster }}"
          SERVICE_ARN="${{ fromJson(inputs.port_context).entity.identifier }}"
          
          echo "‚è≥ Waiting for rollback deployment to stabilize..."
          
          # Wait for service to become stable
          aws ecs wait services-stable \
            --cluster "$CLUSTER_NAME" \
            --services "$SERVICE_ARN"
          
          echo "‚úÖ Rollback completed successfully"

      - name: Verify rollback
        run: |
          CLUSTER_NAME="${{ fromJson(inputs.port_context).entity.relations.cluster }}"
          SERVICE_ARN="${{ fromJson(inputs.port_context).entity.identifier }}"
          EXPECTED_TASK_DEF="${{ steps.task-definitions.outputs.previous_task_def }}"
          
          # Verify the service is now using the previous task definition
          CURRENT_TASK_DEF=$(aws ecs describe-services \
            --cluster "$CLUSTER_NAME" \
            --services "$SERVICE_ARN" \
            --query 'services[0].taskDefinition' \
            --output text)
          
          CURRENT_FAMILY_REV=$(echo $CURRENT_TASK_DEF | sed 's/.*task-definition\/\(.*\)/\1/')
          
          if [[ "$CURRENT_FAMILY_REV" == "$EXPECTED_TASK_DEF" ]]; then
            echo "‚úÖ Rollback verification successful"
            echo "Service is now running: $CURRENT_TASK_DEF"
          else
            echo "‚ùå Rollback verification failed"
            echo "Expected: $EXPECTED_TASK_DEF"
            echo "Actual: $CURRENT_FAMILY_REV"
            exit 1
          fi

      - name: Inform Port about successful rollback
        if: success()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          status: 'SUCCESS'
          runId: ${{fromJson(inputs.port_context).runId}}
          logMessage: |
            ‚úÖ Rollback completed successfully
            Rolled back from: ${{ steps.task-definitions.outputs.current_task_def }}
            Rolled back to: ${{ steps.task-definitions.outputs.previous_task_def }}

      - name: Inform Port about failed rollback
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          status: 'FAILURE'
          runId: ${{fromJson(inputs.port_context).runId}}
          logMessage: ‚ùå Failed to rollback ECS service ${{ fromJson(inputs.port_context).entity.identifier }}
